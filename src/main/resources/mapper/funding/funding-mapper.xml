<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="funding">
	<!-- 김윤수 -->
	<select id="selectMyLikeNoList" resultType="_int">
		select funding_no
		from like_record
		where member_no = #{memberNo} and status='Y'
		order by no desc
	</select>
	
	<select id="selectOneFundingKYS" resultMap="fundingVoMap">
		select * 
		from funding
		where funding_no = #{no}
	</select>
	
	<select id="selectOneAttach" resultType="attachment">
		select * 
		from attachment
		where funding_no = #{no} and status='Y'
	</select>
	
	<select id="selectMyPartiCnt" resultType="_int">
		select count(distinct(funding_no))
		from funding_participation
		where member_no = #{memberNo} and status='Y'
	</select>
	
	<select id="selectMyCreateCnt" resultType="_int">
		select count(*)
		from funding
		where writer_no = #{memberNo} and status='Y'
	</select>
	
	<select id="selectMyPointList" resultType="point">
		select *
		from point
		where member_no = #{memberNo}
		order by no desc
	</select>
	
	<select id="selectMyParticiFunding" resultType="_int">
		select distinct(funding_no)
		from funding_participation
		where member_no = #{memberNo} and status='Y'
	</select>
	
	<select id="selectOneFundingParticipationCollection" resultMap="selectOneFundingParticipationCollectionMap">
		select p.*, r.price, r.title, r.content, r.shipping_price, r.limit_amount, r.shipping_date
		from funding_participation p left join funding_reward r on p.reward_no = r.reward_no
		where p.funding_no=#{fundingNo} and p.member_no=#{memberNo} and status='Y'
		order by p.no desc
	</select>
	
	<update id="cancelReward">
		update funding_participation
		set status = 'N'
		where no = ${no}
	</update>
	
	<resultMap type="funding" id="fundingVoMap">
		<result column="status" property="status" typeHandler="booleanYnTypeHandler"/>
	</resultMap>
	
	<resultMap type="fundingParticipationCollection" id="selectOneFundingParticipationCollectionMap">
		<result column="funding_no" property="fundingNo"/>
		<result column="member_no" property="memberNo"/>
		<collection property="rewardList" ofType="rewardCollection">
			<id column="no" property="no"/>
			<result column="reward_no" property="rewardNo"/>
			<result column="point" property="point"/>
			<result column="price" property="price"/>
			<result column="title" property="title"/>
			<result column="content" property="content"/>
			<result column="shipping_price" property="shippingPrice"/>
			<result column="limit_amount" property="limitAmount"/>
			<result column="shipping_date" property="shippingDate"/>
			<result column="reg_date" property="regDate"/>
			<result column="status" property="status" typeHandler="booleanYnTypeHandler"/>
			<result column="address" property="address"/>
			<result column="name" property="name"/>
			<result column="phone" property="phone"/>
			<result column="etc" property="etc"/>
		</collection>
	</resultMap>
	
	<!-- 김경태 -->
	<!-- 김주연 -->
	<select id="statusYList" resultMap="fundingExtMap">
		select *
		from funding
		where
			<![CDATA[start_date > sysdate]]>
		    and writer_no = #{memberNo}
		    and status = 'Y'
		order by
			funding_no desc
	</select>
	<select id="statusNList" resultMap="fundingExtMap">
		select *
		from funding
		where
		    writer_no = #{memberNo}
		    and status = 'N'
		order by
			funding_no desc
	</select>
	<select id="nowList" resultMap="fundingExtMap">
		select *
		from funding
		where 
		    <![CDATA[start_date < sysdate and d_day > sysdate]]>
		    and writer_no = #{memberNo}
		    and status = 'Y'
		order by
			funding_no desc
	</select>
	<select id="finishList" resultMap="fundingExtMap">
		select *
		from funding
		where
			<![CDATA[start_date < sysdate and d_day < sysdate]]> 
		    and writer_no = #{memberNo}
		    and status = 'Y'
		order by
			funding_no desc
	</select>
	
	<resultMap type="FundingExt" id="fundingExtMap">
		<result column="status" property="status" typeHandler="booleanYnTypeHandler"/>
	</resultMap>
	
	<select id="loadFunding" resultMap="fundingExtMap">
		select *
		from 
			funding 
		where 
			funding_no = #{fundingNo}	
	</select>
	
	<select id="selectCheckFunding" resultMap="fundingExtMap">
		select *
		from 
			funding 
		where 
			funding_no = #{fundingNo}	
	</select>
	
	<insert id="ready1FundingInsertNo">
		insert into
			funding(
				funding_no,
				writer_no,
				reg_date,
				status
			)
			values(
				seq_funding_no.nextval,
				#{writerNo},
				default,
				'N'
			)
		<!--발급받은 funding pk no값을 파라미터 funding객체의 property no에 저장한다.  -->	
		<!--order After 실행된 다음에 가져온다  -->
		<selectKey keyProperty="fundingNo" resultType="_int" order="AFTER">
			select
				seq_funding_no.currval
			from 
				dual
		
		</selectKey>
	</insert>
	<update id="saveCharge">
		update
			funding
		set
			rate_plan_code = #{charge}
		where
			funding_no = #{no}	
	</update>
	<update id="saveBasicInfo">
		update
			funding
		set
			category_code = #{categoryCode},
			title = #{title},
			goal_amount = #{goalAmount},
			d_day = #{dDay}
		where
			funding_no = ${fundingNo}	
	</update>
	<insert id="insertAttachment">
	insert into
		attachment(
			no,
			funding_no,
			originalFilename,
			renamedFilename,
			status
		)
		values(
			seq_attachment_no.nextval,
			#{fundingNo},
			#{originalFilename},
			#{renamedFilename},
			'Y'		
		)
	</insert>
	<update id="updateAttachment">
		update
			attachment
		set
			status = 'N'
		where
			funding_no = #{fundingNo}
	</update>
	
	<update id="saveStory">
		update
			funding
		<set>	
			content = #{content},
			early_content = #{earlyContent},
			start_date = #{startDate}		
		</set>	
		where
			funding_no = #{fundingNo}	
	</update>
	
	<select id="loadReward" resultType="reward">
		select
			*
		from
			funding_reward
		where
			funding_no=#{fundingNo}
	</select>
	
	<select id="selectOneReward" resultType="reward">
		select
			*
		from
			funding_reward
		where
			reward_no=#{rewardNo}
	</select>
	
	<insert id="insertReward">
		insert into
			funding_reward(
				reward_no,
				funding_no,
				price,
				title,
				content,
				shipping_price,
				limit_amount,
				shipping_date
			)
			values(
				seq_funding_reward_no.nextval,
				#{fundingNo},
				#{price},
				#{title},
				#{content},
				#{shippingPrice},
				#{limitAmount},
				#{shippingDate}		
			)
		<!-- 천호현이 추가함 -->
		<selectKey keyProperty="rewardNo" resultType="_int" order="AFTER">
			select
				seq_funding_reward_no.currval
			from 
				dual
		</selectKey>
	</insert>
	
	<update id="updateReward">
		update
			funding_reward
		<set>
			price = #{price},
			title = #{title},
			content = #{content},
			shipping_price = #{shippingPrice},
			limit_amount = #{limitAmount},
			shipping_date = #{shippingDate}
		</set>
		where 
			funding_no = #{fundingNo}
	</update>
	
	<delete id="deleteReward">
		delete from funding_reward
		where
			reward_no = #{rewardNo}
	</delete>
	
	<update id="finalSubmit">
		update
			funding
		set
			status = 'Y'
		where
			funding_no = #{fundingNo}
	</update>
	
	<update id="finalNSubmit">
		update
			funding
		set
			status = 'N'
		where
			funding_no = #{fundingNo}
	</update>
	
	<delete id="deleteFunding">
		delete from funding
		where 
			funding_no =#{fundingNo}
	</delete>
	
	
	
	
	
	<!-- 박요한 -->
	<select id="selectNewsList" resultType="fundingBoard">
		select 
			* 
		from 
			funding_board
		where 
			funding_no = #{fundingNo}
		order by no desc
	</select>
	
	<select id="selectOneNews" resultType="fundingBoard">
		select 
			* 
		from 
			funding_board 
		where 
			no = #{no}
	</select>
	
	<insert id="insertNews">
		insert into
			funding_board(
				no,
				funding_no,
				writer_no,
				title,
				content
			)
		values (
			seq_funding_board_no.nextval,
			#{fundingNo},
			#{writerNo},
			#{title},
			#{content}
		)
	</insert>
	
	<delete id="deleteNews">
		delete
			funding_board
		where
			no = #{no}
	</delete>
	
	<update id="updateNews">
		update
			funding_board
		<set>
			title = #{title},
			content = #{content},
		</set>
		where 
			no = #{no}
	</update>
	
	<select id="selectCommentList" resultType="comment">
		select
			*
		from
			funding_comment f join member m on f.writer_no = m.member_no
		where
			funding_no = #{fundingNo}
		order by comment_no desc
	</select>
	
	<insert id="insertComment">
		insert into
			funding_comment(
				comment_no,
				content,
				writer_no,
				funding_no
			)
		values (
			seq_funding_comment_no.nextval,
			#{content},
			#{writerNo},
			#{fundingNo}
		)
	</insert>
	
	<delete id="deleteComment">
		delete
			funding_comment
		where
			comment_no = #{commentNo}
	</delete>
	
	<select id="participationList" resultType="fundingParticipation">
		select
			*
		from
			funding_participation
		where funding_no = #{fundingNo}
		order by no
	</select>
	
	<select id="participationSelectOne" resultType="fundingParticipation">
		select distinct
			name
		from
			funding_participation
		where
			funding_no = #{fundingNo}
	</select>
	
	<select  id="fundingParticipationCountOne" resultType="_int">
        select count(distinct name) count
        from funding_participation
        where funding_no = #{fundingNo}
	</select>

	<!-- 배기원 -->
	<!-- 펀딩객체를 받는 리스트입니다. -->
	<select id="indexfundingList" resultMap="fundingVoMap">
		select rownum, f.*
		from (
		select funding.*
		from funding
		where <![CDATA[ start_date < sysdate and d_day > sysdate]]>
		and status ='Y'
		order by reg_date desc
		) f
		where rownum between 1 and 6
	</select>
	<!-- 실시간랭킹 리스트입니다. -->
	<select id="indexlikelist" resultMap="fundingVoMap">
		select rownum, f.*
		from (
		select funding.*
		from funding
		where<![CDATA[ start_date < sysdate and d_day > sysdate]]>
		and status='Y'
		order by like_count desc
		)f
		where rownum between 1 and 5
	</select>
	<!-- 새로고침 버튼시 리스트 받는객체입니다. -->
	<select id="indexfundingRefresh" resultMap="fundingVoMap">
		select rownum, f.*
		from (
		select funding.*
		from funding
		where <![CDATA[ start_date < sysdate and d_day > sysdate]]>
		and status = 'Y'
		order by start_date desc
		) f
		where rownum between 1 and 6
    </select>
    
   	<select id="indexRankingviewlist" resultMap="fundingVoMap">
   		select rownum, f.*
		from (
		select funding.*
		from funding
		where <![CDATA[ start_date < sysdate and d_day > sysdate]]>
		and status = 'Y'
		order by readcount desc
		) f
		where rownum between 1 and 6
   	</select>
   	
   	<select id="selectMyListJson" resultType="string">
   		select my_list from funding_mylist where member_no = #{memberNo}
   	</select>
   	
   	<delete id="deleteMyListJson">
   		delete from funding_mylist
   		where member_no = #{memberNo}
   	</delete>
   	
   	<insert id="insertMyListJson">
   		insert into funding_mylist
   		values(#{memberNo}, #{json})
   	</insert>
   <select id="indexearlylist" resultMap="fundingVoMap">
	select rownum, f.*
		from (
		select funding.*
		from funding
		where <![CDATA[ start_date > sysdate]]>
		and status ='Y'
		order by reg_date desc
		) f
		where rownum between 1 and 6   
   </select>
    
	<!-- 이승우 -->
	<!-- searchKeyword searchSelect1 searchSelect2 category -->
	<!-- processing selected(진행중 종료) recent recommand (최신순 과거순) -->
	<select id=""></select>
	<select id="selectFundingList" resultMap="fundingVoMap">
		select *
		from funding
		<where>
			status = 'Y'
			and title like '%' || #{searchKeyword} || '%' 
			and start_date <![CDATA[<]]> sysdate
			<if test="category != null and category != ''">
			and category_code like '%' || #{category} || '%'
			</if>
			<if test="searchSelect1 == 'processing'">
			and d_day <![CDATA[>]]> sysdate
			</if>
			<if test="searchSelect1 == 'quit'">
			and d_day <![CDATA[<]]> sysdate
			</if>
		</where>
		<if test="searchSelect2 == 'recent'or searchSelect2 == ''">
		order by reg_date desc
		</if>
		<if test="searchSelect2 == 'recommand'">
		order by like_count desc
		</if>
		<if test="searchSelect2 == 'past'">
		order by reg_date
		</if>
	</select>
	<select id="selectFundingListTotalContents" resultType="_int">
		select
			count(*)
		from funding
		<where>
			status = 'Y'
			and title like '%' || #{searchKeyword} || '%' 
			and start_date <![CDATA[<]]> sysdate
			<if test="category != null and category != '' and category != 'C0'">
			and category_code like '%' || #{category} || '%'
			</if>
			<if test="searchSelect1 == 'processing'">
			and d_day <![CDATA[>]]> sysdate
			</if>
			<if test="searchSelect1 == 'quit'">
			and d_day <![CDATA[<]]> sysdate
			</if>
		</where>
	</select>
	<select id="selectFundingListBanner" resultMap="fundingVoMap">
		select
		rownum,
		f.*
		from(
		    select
		    *
		    from
		    funding f
		    where status = 'Y'
		    and start_date <![CDATA[<]]> sysdate
		    and d_day <![CDATA[>]]> sysdate
		    order by funding_no desc
		) f
		where rownum between 1 and 5
		order by dbms_random.random
	</select>
	<select id="selectEarlyList" resultMap="fundingVoMap">
		select * 
		from funding
		<where>
			status = 'Y'
			and start_date <![CDATA[>]]> sysdate
		</where>
		order by funding_no desc
	</select>
	<select id="selectEarlyListTotalContents" resultType="_int">
		select count(*)
		from funding
		<where>
			status = 'Y'
			and start_date <![CDATA[>]]> sysdate
		</where>
	</select>
	<select id="selectEarlyListBanner" resultMap="fundingVoMap">
		select
		rownum,
		f.*
		from(
		    select
		    *
		    from
		    funding f
		    where status = 'Y'
		    and start_date <![CDATA[>]]> sysdate
		    order by funding_no desc
		) f
		where rownum between 1 and 5
		order by dbms_random.random
	</select>
	<!-- 천호현 -->
    
    <select id="selectOneFunding" resultMap="fundingExtMap">
        select *
        from funding
        where funding_no = #{fundingNo}
    </select>
    
    <select id="fundingParticipationCount" resultType="_int">
        select count(*) count
        from funding_participation
        where funding_no = #{fundingNo}
    </select>
    
    <select id="likeCheck" resultMap="likeMap">
    	select *
    	from like_record
    	where member_no = #{memberNo} and funding_no = #{fundingNo}
    </select>
    
    <select id="alramCheck" resultMap="alramMap">
    	select *
    	from alram_early_funding
    	where member_no = #{memberNo} and funding_no = #{fundingNo}
    </select>
	   
	<insert id="insertLike">
		insert into like_record
		values (seq_like_record_no.nextval, #{fundingNo}, #{memberNo}, 'Y')
	</insert>
	
	<insert id="insertAlram">
		insert into alram_early_funding
		values (seq_alram_early_no.nextval, #{fundingNo}, #{memberNo}, 'Y')
	</insert>
	
	<resultMap type="map" id="likeMap">
		<id column="no" property="no"/>
		<result column="status" property="status" typeHandler="booleanYnTypeHandler"/>
		<result column="funding_no" property="fundingNo"/>
		<result column="member_no" property="memberNo"/>
	</resultMap>
	
	<resultMap type="map" id="alramMap">
		<id column="no" property="no"/>
		<result column="status" property="status" typeHandler="booleanYnTypeHandler"/>
		<result column="funding_no" property="fundingNo"/>
		<result column="member_no" property="memberNo"/>
	</resultMap>
	
	<update id="updateLike">
		update like_record
		set status = #{status, typeHandler=booleanYnTypeHandler}
		where no = #{no}
	</update>
	<update id="updateAlram">
		update alram_early_funding
		set status = #{status, typeHandler=booleanYnTypeHandler}
		where no = #{no}
	</update>
	
	<select id="likeCount" resultType="_int">
		select count(*)
		from like_record
		where funding_no = #{fundingNo} and status = 'Y'
	</select>
	
	
	<select id="likeStatusCheck" resultType="_int">
		select count(*)
		from like_record
		where member_no = #{memberNo} and status = 'Y' and funding_no = #{fundingNo}
	</select>
	
	<select id="alramStatusCheck" resultType="_int">
		select count(*)
		from alram_early_funding
		where member_no = #{memberNo} and status = 'Y' and funding_no = #{fundingNo}
	</select>
	
	<select id="selectRewardList" resultType="reward">
		select
			*
		from
			funding_reward
		where
			funding_no = #{fundingNo} and not shipping_price = 0 and not limit_amount = 0
		order by funding_no asc
	</select>
	
	
	<insert id="insertFundingParticipation">
		insert into funding_participation 
		values(seq_funding_participation_no.nextval,
			   #{fundingNo},
			   #{memberNo},
			   sysdate,
			   'Y',
			   #{rewardNo},
			   #{point},
			   #{address},
			   #{name},
			   #{phone},
			   #{etc})
	</insert>
	
	<insert id="insertChat">
		insert into funding_chat
		values(seq_funding_chat_no.nextval, #{fundingNo}, #{content}, #{fromMemberNo}, #{fromMemberName}, sysdate)
	</insert>
	
	<select id="selectChatList" resultType="messageVo">
		select * from funding_chat
		where funding_no = #{fundingNo}
		order by no asc
	</select>
	
	<update id="fundingViewCountUp" >
		update funding 
		set readcount = readcount+1
		where funding_no = #{fundingNo}
	</update>
	
	
	<select id="selectEarlyMemberList" resultType="EarlyStartMessage">
		select e.no,
	        e.funding_no,
	        e.member_no,
	        f.start_date
		from alram_early_funding e join funding f
	    	on e.funding_no = f.funding_no
	    where to_char(f.start_date, 'yyyymmdd' ) = to_char( sysdate, 'yyyymmdd')
	</select>
	
	
	<!-- insert into message
	values(seq_message_no.nextval, #{toMemberNo}, #{fromMemberNo}, #{fromMemberName}, #{title}, #{content}, default, #{toMemberName}) -->
	<insert id="sendAlramMessage">
		insert into message
		values(seq_message_no.nextval, #{memberNo}, 121 , '이프운영진', 펀딩 시작 알람메시지, #{title} || '해당 펀딩시작 알람 메세지 드립니다', default, #{memberNo})
	</insert>
	
	
</mapper>